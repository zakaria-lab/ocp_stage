// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  UTILISATEUR
  TECHNICIEN_N1
  TECHNICIEN_N2
  TECHNICIEN_N3
  RESPONSABLE
  ADMINISTRATEUR
}

enum StatutIntervention {
  DEMANDEE
  VALIDEE
  ASSIGNEE
  EN_COURS
  SUSPENDUE
  TERMINEE
  ANNULEE
  REJETEE
}

enum PrioriteIntervention {
  BASSE
  NORMALE
  HAUTE
  CRITIQUE
}

enum TypeIntervention {
  MATERIEL
  LOGICIEL
  RESEAU
  SECURITE
  MAINTENANCE
  INSTALLATION
  SUPPORT
}

enum StatutEquipement {
  OPERATIONNEL
  EN_PANNE
  MAINTENANCE
  RETIRE
}

enum TypeNotification {
  ASSIGNATION
  VALIDATION
  CLOTURE
  ESCALADE
  RAPPEL
  URGENT
}

model Utilisateur {
  id                  Int                    @id @default(autoincrement())
  nom                 String
  prenom              String
  email               String                 @unique
  telephone           String?
  motDePasse          String
  role                UserRole               @default(UTILISATEUR)
  specialite          String?
  niveau              Int?
  dateCreation        DateTime               @default(now())
  statut              Boolean                @default(true)

  // Relations
  demandesCreees      DemandeIntervention[]  @relation("DemandeurInterventions")
  interventions       Intervention[]         @relation("TechnicienInterventions")
  commentaires        Commentaire[]
  notifications       Notification[]
  tableauxBord        TableauBord[]
  planifications      Planification[]
  inventaires         Inventaire[]

  @@map("utilisateurs")
}

model DemandeIntervention {
  id                  Int                    @id @default(autoincrement())
  titre               String
  description         String
  priorite            PrioriteIntervention   @default(NORMALE)
  statut              StatutIntervention     @default(DEMANDEE)
  dateCreation        DateTime               @default(now())
  dateEcheance        DateTime?
  demandeurId         Int
  equipementId        Int?

  // Relations
  demandeur           Utilisateur            @relation("DemandeurInterventions", fields: [demandeurId], references: [id])
  equipement          Equipement?            @relation(fields: [equipementId], references: [id])
  intervention        Intervention?

  @@map("demandes_intervention")
}

model Intervention {
  id                  Int                    @id @default(autoincrement())
  numero              String                 @unique
  type                TypeIntervention
  niveau              Int                    @default(1)
  statut              StatutIntervention     @default(ASSIGNEE)
  dateDebut           DateTime?
  dateFin             DateTime?
  tempsEstime         Int?                   // en minutes
  tempsReel           Int?                   // en minutes
  technicienId        Int?
  demandeId           Int                    @unique

  // Relations
  demande             DemandeIntervention    @relation(fields: [demandeId], references: [id])
  technicien          Utilisateur?           @relation("TechnicienInterventions", fields: [technicienId], references: [id])
  ficheIntervention   FicheIntervention?
  commentaires        Commentaire[]
  documents           Document[]
  planification       Planification?

  @@map("interventions")
}

model FicheIntervention {
  id                  Int                    @id @default(autoincrement())
  interventionId      Int                    @unique
  description         String
  materielUtilise     String?
  actionRealisee      String
  observation         String?
  dateGeneration      DateTime               @default(now())

  // Relations
  intervention        Intervention           @relation(fields: [interventionId], references: [id])

  @@map("fiches_intervention")
}

model Equipement {
  id                  Int                    @id @default(autoincrement())
  nom                 String
  type                String
  marque              String?
  modele              String?
  numeroSerie         String?                @unique
  localisation        String
  statut              StatutEquipement       @default(OPERATIONNEL)
  dateAchat           DateTime?
  garantie            DateTime?
  dateCreation        DateTime               @default(now())

  // Relations
  demandes            DemandeIntervention[]
  inventaires         InventaireEquipement[]

  @@map("equipements")
}

model Inventaire {
  id                  Int                    @id @default(autoincrement())
  dateInventaire      DateTime
  responsableId       Int
  statut              String                 @default("EN_COURS")
  observations        String?
  dateCreation        DateTime               @default(now())

  // Relations
  responsable         Utilisateur            @relation(fields: [responsableId], references: [id])
  equipements         InventaireEquipement[]

  @@map("inventaires")
}

model InventaireEquipement {
  id                  Int                    @id @default(autoincrement())
  inventaireId        Int
  equipementId        Int
  etatConstate        String
  observations        String?

  // Relations
  inventaire          Inventaire             @relation(fields: [inventaireId], references: [id])
  equipement          Equipement             @relation(fields: [equipementId], references: [id])

  @@unique([inventaireId, equipementId])
  @@map("inventaire_equipements")
}

model Planification {
  id                  Int                    @id @default(autoincrement())
  interventionId      Int                    @unique
  datePrevisionnelle  DateTime
  technicienId        Int
  statut              String                 @default("PLANIFIEE")
  dateCreation        DateTime               @default(now())

  // Relations
  intervention        Intervention           @relation(fields: [interventionId], references: [id])
  technicien          Utilisateur            @relation(fields: [technicienId], references: [id])

  @@map("planifications")
}

model Notification {
  id                  Int                    @id @default(autoincrement())
  destinataireId      Int
  titre               String
  message             String
  type                TypeNotification
  dateEnvoi           DateTime               @default(now())
  lu                  Boolean                @default(false)
  lienAction          String?

  // Relations
  destinataire        Utilisateur            @relation(fields: [destinataireId], references: [id])

  @@map("notifications")
}

model Statistique {
  id                  Int                    @id @default(autoincrement())
  periode             String
  type                String
  donnees             Json
  dateGeneration      DateTime               @default(now())

  @@map("statistiques")
}

model TableauBord {
  id                  Int                    @id @default(autoincrement())
  nom                 String
  utilisateurId       Int
  widgets             Json
  dateCreation        DateTime               @default(now())
  dateModification    DateTime               @updatedAt

  // Relations
  utilisateur         Utilisateur            @relation(fields: [utilisateurId], references: [id])

  @@map("tableaux_bord")
}

model Commentaire {
  id                  Int                    @id @default(autoincrement())
  interventionId      Int
  auteurId            Int
  contenu             String
  dateCreation        DateTime               @default(now())
  dateModification    DateTime?

  // Relations
  intervention        Intervention           @relation(fields: [interventionId], references: [id])
  auteur              Utilisateur            @relation(fields: [auteurId], references: [id])

  @@map("commentaires")
}

model Document {
  id                  Int                    @id @default(autoincrement())
  nom                 String
  type                String
  taille              Int
  chemin              String
  interventionId      Int
  uploadePar          Int
  dateUpload          DateTime               @default(now())

  // Relations
  intervention        Intervention           @relation(fields: [interventionId], references: [id])

  @@map("documents")
}